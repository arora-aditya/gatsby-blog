{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","Bio","site","avatar","siteMetadata","author","social","shortBio","style","display","marginBottom","fixed","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","margin","fontSize","github","href","PageTemplate","data","pageContext","previous","next","permalink","title","frontmatter","description","excerpt","canonicalLink","canonical_link","keywords","categories","meta","name","content","timeToRead","className","to","formatPostDate","date","formatReadingTime","items","Embed","body","target","rel","githubUrl","fields","slug","flexWrap","justifyContent","listStyle","padding","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-8020cd118b277653fca4.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nfunction Bio() {\n  const { site, avatar } = useStaticQuery(\n    graphql`\n      query BioQuery {\n        avatar: file(absolutePath: { regex: \"/avatar.jpeg/\" }) {\n          childImageSharp {\n            fixed(width: 50, height: 50, quality: 80) {\n              base64\n              width\n              height\n              src\n              srcSet\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            author\n            shortBio\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const { author, social, shortBio } = site.siteMetadata\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        marginBottom: '4.375rem',\n      }}\n    >\n      <Image\n        fixed={avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: '0.875rem',\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: '100%',\n        }}\n        imgStyle={{\n          borderRadius: '50%',\n        }}\n      />\n      <p style={{ margin: 0 }}>\n        Written by <strong>{author}</strong><br />\n        <span style={{ fontSize: \"calc(6px + 1vh)\" }}>{shortBio ? ` ${shortBio}` : ''}.{` `}</span>\n        {social.github ? (\n          <a href={`https://github.com/${social.github}`}>\n            You should follow them on Github.\n          </a>\n        ) : null}\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport SEO from '../components/seo'\nimport Pills from '../components/pills'\nimport Bio from '../components/bio'\nimport Embed from '../components/embed'\nimport { formatPostDate, formatReadingTime } from '../utils/dates'\n\nimport './blog-post.css'\n\nexport default function PageTemplate({ data: { mdx, site }, pageContext }) {\n  const { previous, next, permalink } = pageContext\n\n  return (\n    <div>\n      <SEO\n        title={mdx.frontmatter.title}\n        description={mdx.frontmatter.description || mdx.excerpt}\n        canonicalLink={mdx.frontmatter.canonical_link}\n        keywords={mdx.frontmatter.categories || []}\n        meta={[\n          {\n            name: 'twitter:label1',\n            content: 'Reading time',\n          },\n          {\n            name: 'twitter:data1',\n            content: `${mdx.timeToRead} min read`,\n          },\n        ]}\n      />\n      <section className=\"center blog\">\n        <article className=\"container small\">\n          <header>\n            <h1>\n              <Link to=\"/\">«</Link> {mdx.frontmatter.title}\n            </h1>\n            <p>\n              {formatPostDate(mdx.frontmatter.date)}\n              {` • ${formatReadingTime(mdx.timeToRead)}`}\n            </p>\n            <Pills items={mdx.frontmatter.categories} />\n          </header>\n\n          <MDXRenderer scope={{ Embed }}>{mdx.body}</MDXRenderer>\n        </article>\n        <footer className=\"container small\">\n          <small>\n            <a\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              href={`https://twitter.com/search?q=${permalink}`}\n            >\n              Discuss on Twitter\n            </a>{' '}\n            &middot;{' '}\n            <a\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              href={`${site.siteMetadata.githubUrl}/edit/master/content${mdx.fields.slug}index.md`}\n            >\n              Edit this post on GitHub\n            </a>\n          </small>\n          <hr\n            style={{\n              margin: `24px 0`,\n            }}\n          />\n          <Bio />\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </footer>\n      </section>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    site {\n      siteMetadata {\n        siteUrl\n        githubUrl\n      }\n    }\n    mdx(id: { eq: $id }) {\n      fields {\n        slug\n      }\n      excerpt\n      timeToRead\n      frontmatter {\n        title\n        description\n        categories\n        date(formatString: \"MMMM DD, YYYY\")\n        canonical_link\n      }\n      body\n    }\n  }\n`\n"],"sourceRoot":""}