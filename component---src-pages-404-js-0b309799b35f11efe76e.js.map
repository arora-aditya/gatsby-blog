{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","keywords","canonicalLink","image","_staticQueryData$data","_public_static_d_3979342734_json__WEBPACK_IMPORTED_MODULE_1__","data","site","avatar","fullURL","path","siteMetadata","siteUrl","metaDescription","metaTitle","socialImage","childImageSharp","fixed","src","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","charset","http-equiv","content","name","itemprop","property","social","twitter","concat","length","join","link","rel","href","defaultProps","Layout","children"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,8JCeJ,SAASE,EAATC,GAQG,IAPDC,EAOCD,EAPDC,YACAC,EAMCF,EANDE,KACAC,EAKCH,EALDG,KACAC,EAICJ,EAJDI,SACAN,EAGCE,EAHDF,MACAO,EAECL,EAFDK,cACAC,EACCN,EADDM,MACCC,EAAAC,EAAAC,KACOC,EADPH,EACOG,KAAMC,EADbJ,EACaI,OAyBRC,EAAU,SAAAC,GAAI,OAClBA,EAAI,GAAMH,EAAKI,aAAaC,QAAUF,EAASH,EAAKK,SAEhDC,EAAkBf,GAAeS,EAAKI,aAAab,YACnDgB,EAAYnB,GAASY,EAAKI,aAAahB,MAGvCoB,EAAcZ,GAASK,EAAOQ,gBAAgBC,MAAMC,IAE1D,OACEC,EAAA1B,EAAAC,cAAC0B,EAAA3B,EAAD,CACE4B,eAAgB,CACdtB,QAEFJ,MAAOmB,EACPd,KAAM,CACJ,CAAEsB,QAAS,SACX,CACEC,aAAc,kBACdC,QAAS,WAEX,CACEC,KAAM,WACND,QAAS,uCAEX,CACEC,KAAM,cACND,QAAS,QAEX,CAAEE,SAAU,OAAQF,QAASV,GAC7B,CACEW,KAAI,cACJD,QAASX,GAEX,CAAEa,SAAU,QAASF,QAASf,EAAQM,IACtC,CACEY,SAAQ,WACRH,QAAS7B,GAASY,EAAKI,aAAahB,OAEtC,CACEgC,SAAQ,iBACRH,QAASX,GAEX,CAAEc,SAAU,WAAYH,QAASf,EAAQM,IACzC,CACEU,KAAI,eACJD,QAAO,WAET,CACEC,KAAI,kBACJD,QAASjB,EAAKI,aAAaiB,OAAOC,SAEpC,CACEJ,KAAI,eACJD,QAASjB,EAAKI,aAAaiB,OAAOC,SAEpC,CACEJ,KAAI,gBACJD,QAAS7B,GAEX,CACE8B,KAAI,sBACJD,QAASX,GAEX,CACEY,KAAM,gBACND,QAASf,EAAQM,KAGlBe,OACC7B,GAAYA,EAAS8B,OAAS,EAC1B,CACEN,KAAI,WACJD,QAASvB,EAAS+B,KAAT,OAEX,IAELF,OAAO9B,GACViC,KAAM,GAAGH,OACP5B,EACI,CACEgC,IAAG,YACHC,KAAMjC,GAER,MAMZN,EAAIwC,aAAe,CACjBrC,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAaEF,sUCrKf,IAAAT,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAH,EAAA,KAWeqD,IANA,SAAAxC,GAAA,IAAGyC,EAAHzC,EAAGyC,SAAH,OAAkBlD,EAAAK,EAAAC,cAAA,YAAO4C","file":"component---src-pages-404-js-0b309799b35f11efe76e.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * This react helmt code is adapted from\n * https://themeteorchef.com/tutorials/reusable-seo-with-react-helmet.\n *\n * A great tutorial explaining how to setup a robust version of an\n * SEO friendly react-helmet instance.\n *\n *\n * Use the Helmt on pages to generate SEO and meta content!\n *\n * Usage:\n * <SEO\n *   title={title}\n *   description={description}\n *   image={image}\n * />\n *\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n  canonicalLink,\n  image,\n}) {\n  const { site, avatar } = useStaticQuery(\n    graphql`\n      query {\n        avatar: file(absolutePath: { regex: \"/avatar.png/\" }) {\n          childImageSharp {\n            fixed(width: 150, height: 150, quality: 90) {\n              src\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            siteUrl\n            title\n            description\n            author\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const fullURL = path =>\n    path ? `${site.siteMetadata.siteUrl}${path}` : site.siteUrl\n\n  const metaDescription = description || site.siteMetadata.description\n  const metaTitle = title || site.siteMetadata.title\n\n  // If no image is provided lets use the avatar\n  const socialImage = image || avatar.childImageSharp.fixed.src\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      meta={[\n        { charset: 'utf-8' },\n        {\n          'http-equiv': 'X-UA-Compatible',\n          content: 'IE=edge',\n        },\n        {\n          name: 'viewport',\n          content: 'width=device-width, initial-scale=1',\n        },\n        {\n          name: 'theme-color',\n          content: '#fff',\n        },\n        { itemprop: 'name', content: metaTitle },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        { itemprop: 'image', content: fullURL(socialImage) },\n        {\n          property: `og:title`,\n          content: title || site.siteMetadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        { property: 'og:image', content: fullURL(socialImage) },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:site`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: 'twitter:image',\n          content: fullURL(socialImage),\n        },\n      ]\n        .concat(\n          keywords && keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n      link={[].concat(\n        canonicalLink\n          ? {\n              rel: `canonical`,\n              href: canonicalLink,\n            }\n          : []\n      )}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n  canonicalLink: PropTypes.string,\n  image: PropTypes.string,\n}\n\nexport default SEO\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './layout.css'\n\nconst Layout = ({ children }) => <main>{children}</main>\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}